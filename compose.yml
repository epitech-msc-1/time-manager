name: time-manager
services:
  db:
    image: postgres:16-alpine
    container_name: postgres
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 10

  backend:
    build:
      context: backend/
      dockerfile: Dockerfile
    image: backend:1.0.0
    container_name: backend
    working_dir: /app/PrimeBank
    env_file:
      - .env
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${DB_HOST}:${DB_PORT}/${POSTGRES_DB}
      DJANGO_SETTINGS_MODULE: ${DJANGO_SETTINGS_MODULE:-config.settings}
      DJANGO_DEBUG: ${DJANGO_DEBUG:-1}
    volumes:
      - ./backend/PrimeBank/:/app/PrimeBank/
    command: sh -c "uv run manage.py migrate && uv run manage.py runserver 0.0.0.0:8000"
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test:
        - CMD-SHELL
        - "curl --fail --silent --show-error -H 'Accept: application/json' http://127.0.0.1:8000/ht/"
      interval: 5s
      timeout: 5s
      start_period: 10s
      retries: 10

  frontend:
    build:
      context: frontend/
      dockerfile: Dockerfile
    image: frontend:1.0.0
    container_name: frontend
    ports:
      - 5173:5173
    depends_on:
      backend:
        condition: service_healthy

volumes:
  db_data:
