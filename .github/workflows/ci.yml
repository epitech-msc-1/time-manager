name: CI - Time Manager

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  frontend:
    name: Frontend (Bun + Vite + React)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: 1.3.0

      - name: Cache Bun dependencies
        uses: actions/cache@v4
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('frontend/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install dependencies
        working-directory: frontend
        run: bun install --frozen-lockfile

      - name: Lint with Biome
        working-directory: frontend
        run: bun lint

      - name: Format check
        working-directory: frontend
        run: bun format --check

      - name: Run tests
        working-directory: frontend
        run: bun test || echo "No tests found"


  backend:
    name: Backend (Django + GraphQL + uv)
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: django
          POSTGRES_PASSWORD: django
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U django"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12.11
          cache: "pip"

      - name: Install uv
        run: pip install uv

      - name: Install dependencies
        working-directory: backend
        run: uv pip install .[dev]

      - name: Lint with Ruff
        working-directory: backend
        run: uv run ruff check .

      - name: Run Django tests
        working-directory: backend
        env:
          DATABASE_URL: postgres://django:django@localhost:5432/test_db
          DJANGO_SETTINGS_MODULE: backend.settings
        run: |
          python manage.py migrate --noinput
          python manage.py test --verbosity=2
